generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  entries       HayfeverEntry[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model HayfeverEntry {
  id                      String   @id @default(uuid())
  date                    DateTime
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  userId                  String
  sneezing                Float
  itchyEyes               Float
  congestion              Float
  headache                Float
  medications             String
  medicationEffectiveness String
  outdoorTime             Float?
  activities              String
  notes                   String?
  locationLat             Float?
  locationLng             Float?
  locationAddress         String?
  pollenCount             Float?
  pollenTypes             String?
  temperature             Float?
  humidity                Float?
  windSpeed               Float?
  user                    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
